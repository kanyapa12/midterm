services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ahhhha_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Bangkok
    ports:
      - "127.0.0.1:${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # Use a relative path that exists alongside this compose file
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - ahhhha_network
    # *****************************************************************
    # 1. การแก้ไข: เพิ่ม Health Check ให้ MySQL
    # ตรวจสอบสถานะ MySQL โดยใช้ mysqladmin ping
    # *****************************************************************
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 20s # เพิ่มเวลา timeout เผื่อกรณีที่ใช้เวลานานในการรัน init.sql
      retries: 10 # เพิ่มจำนวนครั้งการตรวจสอบ
      start_period: 30s # ให้เวลา 30 วินาทีในการเริ่มรันก่อนเริ่มตรวจสอบ
      
  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ahhhha_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql      # use service name for internal DNS
      PMA_PORT: 3306
      UPLOAD_LIMIT: 256M
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    networks:
      - ahhhha_network
    # เพิ่ม depends_on เพื่อให้ phpMyAdmin รอ MySQL ก่อน
    depends_on:
      mysql:
        condition: service_healthy

  # Express.js Application
  app:
    build: .
    container_name: ahhhha_app
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      # Use service name + default port for in-network DB access
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Bangkok
    ports:
      - "${APP_PORT:-5000}:${PORT:-5000}"
    networks:
      - ahhhha_network
    # *****************************************************************
    # 2. การแก้ไข: เพิ่ม depends_on แบบมีเงื่อนไข
    # บังคับให้ App รอจนกว่า MySQL จะ 'healthy' (พร้อมให้บริการ)
    # *****************************************************************
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data:

networks:
  ahhhha_network:
    driver: bridge